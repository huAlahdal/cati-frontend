{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/callsData.service\";\nimport * as i4 from \"ngx-spinner\";\nfunction LoginComponent_alert_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"alert\", 14)(1, \"strong\");\n    i0.ɵɵtext(2, \"Error!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction LoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"alert\", 15);\n    i0.ɵɵtext(2, \" username is required. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_15_div_1_Template, 3, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.mobile.errors.required);\n  }\n}\nfunction LoginComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"alert\", 15);\n    i0.ɵɵtext(2, \" password is required. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_20_div_1_Template, 3, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.password.errors.required);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, route, httpRequest, spinner, http) {\n      this.auth = auth;\n      this.route = route;\n      this.httpRequest = httpRequest;\n      this.spinner = spinner;\n      this.http = http;\n      document.body.style.background = 'rgb(68, 68, 68)';\n    }\n    ngOnInit() {\n      this.http.RemoveProjectId();\n      this.loginForm = new FormGroup({\n        mobile: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n    }\n    get f() {\n      return this.loginForm.controls;\n    }\n    onSubmit() {\n      if (!this.loginForm.valid) {\n        return;\n      }\n      this.auth.agentLogin(this.loginForm.value).subscribe(resData => {\n        this.route.navigate(['/projects']);\n        this.spinner.hide();\n      }, errorMessage => {\n        this.error = errorMessage;\n        this.spinner.hide();\n      });\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CallsDataService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.CallsDataService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 24,\n      vars: 5,\n      consts: [[2, \"color\", \"white\"], [1, \"jumbotron\", \"login-area\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm-6\", \"offset-sm-3\"], [\"type\", \"md-local\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"mobile\", \"formControlName\", \"mobile\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"md-local\"], [\"type\", \"md-local2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ngx-spinner\")(1, \"h3\", 0);\n          i0.ɵɵtext(2, \"\\u0627\\u0646\\u062A\\u0638\\u0631....\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4);\n          i0.ɵɵtemplate(7, LoginComponent_alert_7_Template, 4, 1, \"alert\", 5);\n          i0.ɵɵelementStart(8, \"h2\");\n          i0.ɵɵtext(9, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_10_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n          i0.ɵɵtext(13, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 9);\n          i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 11);\n          i0.ɵɵtext(18, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 12);\n          i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 7)(22, \"button\", 13);\n          i0.ɵɵtext(23, \" Login \");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.f.mobile.invalid && (ctx.f.mobile.dirty || ctx.f.mobile.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.f.password.invalid && (ctx.f.password.dirty || ctx.f.password.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        }\n      },\n      styles: [\".login-area[_ngcontent-%COMP%]{margin-top:250px}.radio[_ngcontent-%COMP%]{margin:0 auto}\", \"[_nghost-%COMP%]     .alert-md-local{background-color:#c42948;border-color:#00695c;color:#fff}[_nghost-%COMP%]     .alert-md-local2{background-color:#009372;border-color:#00695c;color:#fff}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}