{"ast":null,"code":"import { take, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    // tslint:disable-next-line: variable-name\n    constructor(_authservice, route, router) {\n      this._authservice = _authservice;\n      this.route = route;\n      this.router = router;\n    }\n    canActivate(route, router) {\n      return this._authservice.user.pipe(take(1), map(user => {\n        const isAuth = !!user;\n        const expectedRole = route.data.expectedRole;\n        const userDataAgent = JSON.parse(localStorage.getItem('userDataAgent'));\n        if (isAuth && router.url === '/') {\n          this._authservice.logout();\n          return true;\n        } else if (isAuth && expectedRole === userDataAgent.roleId) {\n          return true;\n        } else if (!isAuth && router.url === '/') {\n          return true;\n        }\n        this._authservice.logout();\n        return this.route.createUrlTree(['/']);\n      }));\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}