{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { baseUrl } from '../helpers/baseUrl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.url = baseUrl + '/api';\n      this.user = new BehaviorSubject(null);\n    }\n    agentLogin(userDataAgent) {\n      return this.http.post(baseUrl + '/api/users/loginagent', userDataAgent).pipe(tap(resData => {\n        this.handleAuth(resData.name, resData.email, resData.mobile, resData.roleId, resData.token);\n      }));\n    }\n    logout() {\n      this.user.next(null);\n      localStorage.removeItem('userDataAgent');\n      localStorage.removeItem('project');\n      if (this.TokenexpiteTimer) {\n        clearTimeout(this.TokenexpiteTimer);\n      }\n      this.TokenexpiteTimer = null;\n      this.router.navigate(['/']);\n    }\n    autoLogin() {\n      const userDataAgent = JSON.parse(localStorage.getItem('userDataAgent') || '{}');\n      if (!userDataAgent) {\n        return;\n      }\n      const loadUser = new User(userDataAgent.name, userDataAgent.email, userDataAgent.mobile, userDataAgent.roleId, userDataAgent.token);\n      if (loadUser._token) {\n        this.user.next(loadUser);\n      }\n    }\n    getToken() {\n      if (localStorage.getItem('userDataAgent')) {\n        const userDataAgent = JSON.parse(localStorage.getItem('userDataAgent'));\n        return userDataAgent ? userDataAgent.token : null;\n      }\n      return null;\n    }\n    getRole() {\n      if (localStorage.getItem('userDataAgent')) {\n        const userDataAgent = JSON.parse(localStorage.getItem('userDataAgent'));\n        return userDataAgent.roleId ? userDataAgent.roleId : null;\n      }\n      return null;\n    }\n    handleAuth(name, email, mobile, roleId, token) {\n      const user = new User(name, email, mobile, roleId, token);\n      this.user.next(user);\n      localStorage.setItem('userDataAgent', JSON.stringify(user));\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}