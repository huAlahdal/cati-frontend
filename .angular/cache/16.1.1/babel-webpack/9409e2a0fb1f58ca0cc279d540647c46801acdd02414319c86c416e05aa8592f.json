{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { ChangeDetectorRef, Directive, HostBinding, HostListener, Input } from '@angular/core';\nimport { OwlDateTimeComponent } from './date-time-picker.component';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\nvar OwlDateTimeTriggerDirective = function () {\n  function OwlDateTimeTriggerDirective(changeDetector) {\n    this.changeDetector = changeDetector;\n    this.stateChanges = Subscription.EMPTY;\n  }\n  Object.defineProperty(OwlDateTimeTriggerDirective.prototype, \"disabled\", {\n    get: function () {\n      return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\n    },\n    set: function (value) {\n      this._disabled = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(OwlDateTimeTriggerDirective.prototype, \"owlDTTriggerDisabledClass\", {\n    get: function () {\n      return this.disabled;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  OwlDateTimeTriggerDirective.prototype.ngOnInit = function () {};\n  OwlDateTimeTriggerDirective.prototype.ngOnChanges = function (changes) {\n    if (changes.datepicker) {\n      this.watchStateChanges();\n    }\n  };\n  OwlDateTimeTriggerDirective.prototype.ngAfterContentInit = function () {\n    this.watchStateChanges();\n  };\n  OwlDateTimeTriggerDirective.prototype.ngOnDestroy = function () {\n    this.stateChanges.unsubscribe();\n  };\n  OwlDateTimeTriggerDirective.prototype.handleClickOnHost = function (event) {\n    if (this.dtPicker) {\n      this.dtPicker.open();\n      event.stopPropagation();\n    }\n  };\n  OwlDateTimeTriggerDirective.prototype.watchStateChanges = function () {\n    var _this = this;\n    this.stateChanges.unsubscribe();\n    var inputDisabled = this.dtPicker && this.dtPicker.dtInput ? this.dtPicker.dtInput.disabledChange : observableOf();\n    var pickerDisabled = this.dtPicker ? this.dtPicker.disabledChange : observableOf();\n    this.stateChanges = merge(pickerDisabled, inputDisabled).subscribe(function () {\n      _this.changeDetector.markForCheck();\n    });\n  };\n  __decorate([Input('owlDateTimeTrigger'), __metadata(\"design:type\", OwlDateTimeComponent)], OwlDateTimeTriggerDirective.prototype, \"dtPicker\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], OwlDateTimeTriggerDirective.prototype, \"disabled\", null);\n  __decorate([HostBinding('class.owl-dt-trigger-disabled'), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [])], OwlDateTimeTriggerDirective.prototype, \"owlDTTriggerDisabledClass\", null);\n  __decorate([HostListener('click', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Event]), __metadata(\"design:returntype\", void 0)], OwlDateTimeTriggerDirective.prototype, \"handleClickOnHost\", null);\n  OwlDateTimeTriggerDirective = __decorate([Directive({\n    selector: '[owlDateTimeTrigger]'\n  }), __metadata(\"design:paramtypes\", [ChangeDetectorRef])], OwlDateTimeTriggerDirective);\n  return OwlDateTimeTriggerDirective;\n}();\nexport { OwlDateTimeTriggerDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}